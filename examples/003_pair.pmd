
enum Pair[A, B] :=
| Pair(A, B)

type Pair = # forall A B .
  enum {
  | Pair(A, B)
  }

fn first = forall { A B .
  # Pair(A, B) -> A : { Pair(x, _) . x }
}

fn second = forall { A B .
  # Pair[A, B] -> A {
  | Pair(_, y) . y 
  }
}

